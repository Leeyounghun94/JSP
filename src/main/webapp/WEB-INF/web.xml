<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  <display-name>board-jsp</display-name>
  <!-- application 영역으로 톰켓이 프로젝트 마다 관장한다.  -->
  <!-- Deployment Descriptor : DD (배포 서술자) 라고 한다. -->
  
  
  
  <welcome-file-list><!-- HTTP://192.168.111.101:80/board-jsp/로 접속 시 기본 파일을 찾는다.  -->
  
    <welcome-file>index.jsp</welcome-file>
   
  </welcome-file-list>
  
  
  
  
  <context-param>
  <param-name> INIT_PARAM </param-name>
  <param-value> web.xml에서 만든 초기화 매개값 </param-value>
  </context-param><!-- jsp에서 web.xml 값을 가져오는 연습. -->
  
  
  <servlet>
  	<servlet-name>MemberAuth</servlet-name>
  	<servlet-class>servlet.MemberAuth</servlet-class>
  <init-param>
  	<param-name>admin_id</param-name>
  	<param-value>kkk</param-value>
  </init-param>
  </servlet> <!-- 서블릿용 기본 자료 -->
  
  <!-- url 매핑용 코드 http://localhost/board-jsp/13Servlet/MemberAuth -->
  <servlet-mapping>
  	<servlet-name>MemberAuth</servlet-name>
  	<url-pattern>/13Servlet/MemberAuth</url-pattern>
  
  </servlet-mapping>
  
  
  
  
  <!-- JDBC용 코드 삽입 : 컴파일 없이 수정이 가능하다.  -->
  
 	<context-param>
  	<param-name> OracleDriver</param-name>
  	<param-value>oracle.jdbc.OracleDriver</param-value>
    </context-param>
  	
    <context-param>	
  	<param-name>OracleURL</param-name>
  	<param-value>jdbc:oracle:thin:@localhost:1521:xe</param-value>
  	</context-param>
  	
  	<context-param>
  	<param-name>OracleId</param-name>
  	<param-value>boardjsp</param-value>
    </context-param>
  
    <context-param>	
  	<param-name>OraclePwd</param-name>
  	<param-value>1234</param-value>
 	</context-param>
  
  <!-- 페이징 처리용 변수 선언  -->
  <context-param>
  	<param-name>POSTS_PER_PAGE</param-name>
  	<param-value>10</param-value> <!-- 한 페이지에 게시물 10개 -->
  </context-param>
  
  <context-param>
  	<param-name>PAGES_PER_BLOCK</param-name>
  	<param-value>5</param-value> <!-- 한 화면에 보이는 페이지 블록 5개 -->
  </context-param>
  	
  
  <!-- 톰켓에서 에러페이지 처리를 커스텀 처리.  -->
  <error-page>
  	<error-code>404</error-code>
  	<location>/02ImplicitObject/Exception.jsp</location>
  </error-page>
  
   <error-page>
  	<error-code>405</error-code>
  	<location>/02ImplicitObject/Exception.jsp</location>
  </error-page>
  
   <error-page>
  	<error-code>500</error-code>
  	<location>/02ImplicitObject/Exception.jsp</location>
  </error-page>
  
  
  
  <!-- 세션 관리하기.  -->
  <session-config>
  	<session-timeout>20</session-timeout>
  </session-config> <!-- 세션의 만료시간을 20분으로 설정. -->
  
  
   <!-- POST방식의 한글 깨짐 방지를 위한 필터 설정(필터는 톰켓이 클라이언트의 요청을 처리 전에 걸려서 보냄) -->
  <filter>
    <filter-name>SetCharEncoding</filter-name>
    <filter-class>org.apache.catalina.filters.SetCharacterEncodingFilter</filter-class>
      <init-param>
        <param-name>encoding</param-name>
        <param-value>utf-8</param-value>
      </init-param>
  </filter>
  <filter-mapping><!-- mapping : 위에서 만든 필터를 적용할 범위를 설정 -->
    <filter-name>SetCharEncoding</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  
  
  
  
  
</web-app>